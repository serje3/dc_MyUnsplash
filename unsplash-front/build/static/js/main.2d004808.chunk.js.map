{"version":3,"sources":["img/svg/search_black_24dp.svg","api/base/ajax.tsx","settings.tsx","api/authAPI.tsx","utils/references/formRefs.tsx","utils/enums/columnsOrderEnum.tsx","api/imageAPI.tsx","utils/events/handlers.tsx","components/header.tsx","utils/enums/columnCountEnum.tsx","components/wrapperImage.tsx","components/column.tsx","components/images.tsx","components/forms/base/form.tsx","components/forms/photoForm.tsx","components/forms/passwordForm.tsx","components/forms/loginForm.tsx","components/userImages.tsx","utils/parsers.tsx","components/whiteSpaceArea.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["APIBase","handleErrors","jqXHR","textStatus","status","alert","responseText","sendRequest","url","method","data","settings","formData","parseFormData","$","ajax","headers","Cookies","get","contentType","processData","error","this","FormData","each","key","value","append","API_URL","API","IMAGE","REQUEST","body","POST","DELETE","kwargs","AUTH","CREATE_USER","GET_USER","JWT_CREATE","JWT_REFRESH","APIUser","authorizationCheck","_user","undefined","done","response","user","username","fail","ErrorText","reason","refreshToken","window","location","reload","password","console","log","timeout","registerUser","saveJWT","access","refresh","loginUser","localStorage","getItem","_","__","set","setItem","ColumnsOrderEnum","FormRefs","PhotoFormRef","React","createRef","PasswordFormRef","LoginFormRef","APIImages","getImages","handleState","postImage","deleteImage","pk","eventHandlers","form","openButton","onClick","reference","current","style","setProperty","setTimeout","classList","add","cancelButton","remove","loginForm","onSubmit","event","preventDefault","usernameField","document","querySelector","passwordField","then","photoForm","target","label","img_url","bind","passwordForm","images","photoDeleteButton","img","pkInput","getElementById","props","inputUrl","onChange","e","inputSearch","setFilter","filter","searchQueryRegExp","RegExp","toLowerCase","alt","match","Header","className","href","children","focus","src","search_img","type","placeholder","setFilterImages","justifyContent","ColumnCount","WrapperImg","Component","Column","getContentColumn","index","order","imgListColumn","forEach","imgList","length","push","contentColList","map","column","columnCount","Images","getStyles","gridTemplateColumns","justifyItems","maxWidth","marginLeft","marginRight","isEmpty","querySelectorAll","colElem","childElementCount","getOrder","filteredImages","filterImages","Array","isArray","imageArray","row_index","Math","trunc","Three","getColumns","columnArray","First","Form","state","display","ref","PhotoForm","actionUrl","name","required","PasswordForm","autoComplete","id","defaultValue","hidden","LoginForm","UserImages","client","imagesClient","handleStates","setState","parseImages","image","img_file","data-pk","toString","parseImageListResponse","saveImage","prevProps","prevState","snapshot","WhiteSpaceArea","isAnonymous","UserAPI","App","useState","setImages","isWindow","smallerThan700","useMediaPredicate","smallerThan850","smallerThan1304","columnsCount","One","Two","_images","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d004808.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search_black_24dp.f03572ee.svg\";","import $ from \"jquery\";\nimport Cookies from \"js-cookie\";\n\n\n\nexport default abstract class APIBase{\n\n    private handleErrors = (jqXHR: JQuery.jqXHR, textStatus: JQuery.Ajax.ErrorTextStatus): void => {\n        switch (jqXHR.status){\n            case 0: {\n                alert('Not connect. Verify Network.');\n                return;\n            }\n            case 404: {\n                alert('Requested page not found (404).');\n                return;\n            }\n            case 500: {\n                alert('Internal Server Error (500).');\n                return;\n            }\n        }\n        switch (textStatus) {\n            case \"parsererror\": {\n                alert('Requested JSON parse failed.');\n                return;\n            }\n            case \"timeout\": {\n                alert('Time out error.');\n                return;\n            }\n            case \"abort\": {\n                alert('Ajax request aborted.');\n                return;\n            }\n            default: {\n                alert('Uncaught Error. ' + jqXHR.responseText);\n                return;\n            }\n        }\n    }\n\n    private parseFormData(data: object): FormData{\n        const formData = new FormData()\n        $.each(data, function (key,value){\n            formData.append(key, value)\n        })\n        return formData\n    }\n\n    protected sendRequest = (url: string, method:string=\"GET\", data:object= {}, settings?:JQuery.AjaxSettings):JQuery.jqXHR => {\n        const formData = this.parseFormData(data);\n        return $.ajax({\n            url: url,\n            method: method,\n            data: formData,\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                'Authorization': 'Bearer '+ Cookies.get('access'),\n            },\n            ...this.settings,\n            ...settings\n        })\n    }\n\n    private settings: JQuery.AjaxSettings = {\n        contentType: false,\n        processData: false,\n        error: this.handleErrors,\n    }\n\n}\n","const API_URL = \"https://151-248-121-170.cloudvps.regruhosting.ru\"\nexport const settings = {\n    API: {\n        IMAGE:{\n            REQUEST: {\n                url: API_URL+'/api/v2/image',\n                body: {\n                    POST: [\n                        'label', 'img_url', 'img_file'\n                    ]\n                }\n            },\n            DELETE: {\n                url: API_URL + '/api/v2/image/delete/',\n                kwargs: ['pk']\n            }\n        },\n\n        AUTH:{\n            CREATE_USER:{\n                url: API_URL + '/auth/users/',\n                body: {\n                    POST: [\n                        'username', 'password'\n                    ]\n                }\n            },\n            GET_USER: {\n                url: API_URL + '/auth/users/me/'\n            },\n            JWT_CREATE: {\n                url: API_URL + '/auth/jwt/create/',\n                body: {\n                    POST: [\n                        'username', 'password'\n                    ]\n                }\n            },\n            JWT_REFRESH: {\n                url: API_URL + '/auth/jwt/refresh',\n                body: {\n                    POST: [\n                        'refresh'\n                    ]\n                }\n            }\n        }\n\n    }\n}","import APIBase from \"./base/ajax\";\nimport {settings} from \"../settings\";\nimport Cookies from \"js-cookie\";\n\nexport default class APIUser extends APIBase{\n    constructor() {\n        super();\n        this.authorizationCheck();\n    }\n\n    get user() {\n        return APIUser._user;\n    }\n    private static set user(value: string) {\n        APIUser._user = value;\n    }\n\n    private static _user: string = \"\";\n\n    public authorizationCheck(): void {\n        this.sendRequest(\n            settings.API.AUTH.GET_USER.url, \"GET\", undefined, {\n                error:()=>{}\n            }\n        )\n            .done((response)=>{\n                APIUser.user = response.username\n            })\n            .fail((jqXHR, ErrorText, reason)=>{\n                if (reason === 'Unauthorized'){\n                    this.refreshToken().done(()=>{\n                        window.location.reload()\n                    })\n                }\n            })\n    }\n\n    public loginUser(username: string, password: string): JQuery.jqXHR{\n        console.log('login: ', username)\n        return this.sendRequest(settings.API.AUTH.JWT_CREATE.url, \"POST\", {\n            username:username,\n            password:password\n        }).fail((jqXHR, timeout, reason)=>{\n            if (reason === 'Unauthorized'){\n                APIUser.user = \"\"\n                this.registerUser(username, password)\n            }\n        })\n            .done((response)=>{\n                APIUser.saveJWT(response.access, response.refresh)\n                APIUser.user = username\n            })\n    }\n\n    private registerUser(username:string, password: string): boolean{\n        let user = false;\n        this.sendRequest(settings.API.AUTH.CREATE_USER.url, \"POST\", {\n            username:username,\n            password:password\n        }, {\n\n        })\n            .done((response)=>{\n                this.loginUser(username, password)\n            })\n\n        return user\n    }\n\n    private refreshToken(){\n        return this.sendRequest(settings.API.AUTH.JWT_REFRESH.url, \"POST\", {\n            \"refresh\": localStorage.getItem(\"refresh\")\n        },\n            {\n                error: ()=>{}\n            }).done((response)=>{\n            APIUser.saveJWT(response.access, response.refresh)\n            this.authorizationCheck()\n        })\n            .fail((_,__,reason)=>{\n                if (reason === 'Unauthorized'){\n                    alert(\"Login to see or add image\")\n                }\n            })\n    }\n\n    private static saveJWT(access: string, refresh: string){\n        Cookies.set(\"access\", access)\n        localStorage.setItem(\"refresh\", refresh)\n    }\n\n}","import React from \"react\";\n\nexport const FormRefs = {\n    PhotoFormRef: React.createRef<HTMLDivElement>(),\n    PasswordFormRef: React.createRef<HTMLDivElement>(),\n    LoginFormRef: React.createRef<HTMLDivElement>()\n}","\nexport enum ColumnsOrderEnum{\n    First,\n    Second,\n    Third\n}","import {settings} from \"../settings\";\nimport APIBase from \"./base/ajax\";\nimport {ImageResponseBody} from \"../utils/interfaces\";\n\n\nexport default class APIImages extends APIBase{\n    public getImages = (handleState: (response: (Array<ImageResponseBody> | ImageResponseBody)) => void):JQuery.jqXHR =>{\n        return this.sendRequest(settings.API.IMAGE.REQUEST.url)\n            .done(data => {\n                console.log(\"DONE: \", data)\n                handleState(data)\n            })\n            .fail((jqXHR, _, reason)=>{\n                console.log(reason)\n            })\n\n    }\n\n    public postImage = (\n        data: {\n            label: string,\n            img_url: string\n        },\n        handleState: (response: (Array<ImageResponseBody> | ImageResponseBody)) => void\n    ): JQuery.jqXHR =>\n        this.sendRequest(\n            settings.API.IMAGE.REQUEST.url,\n            \"POST\",\n            data\n            ).done(data => handleState(data))\n\n    public deleteImage = (pk: string, username:string, password:string,\n        handleState: (response: (Array<ImageResponseBody> | ImageResponseBody)) => void\n    ): JQuery.jqXHR =>\n        this.sendRequest(\n        settings.API.IMAGE.DELETE.url+pk,\n        \"DELETE\",\n        {\n            username: username,\n            password: password\n        }\n    ).done(data => handleState(data))\n}","import {Dispatch, ReactNode, RefObject, SetStateAction, SyntheticEvent} from \"react\";\nimport APIUser from \"../../api/authAPI\";\nimport {FormRefs} from \"../references/formRefs\";\nimport APIImages from \"../../api/imageAPI\";\n\nexport const eventHandlers = {\n    form: {\n        openButton: {\n            onClick: (reference: RefObject<HTMLDivElement>) => {\n                reference.current?.style.setProperty(\"display\", \"block\")\n                setTimeout(()=>reference.current?.classList.add('appear'), 100)\n\n            }\n        },\n        cancelButton: {\n            onClick: (reference: RefObject<HTMLDivElement>) => {\n                reference.current?.classList.remove('appear')\n                setTimeout(()=> reference.current?.style.setProperty(\"display\", \"none\"),350)\n\n            }\n        },\n        loginForm: {\n            onSubmit: (event: SyntheticEvent) => {\n                event.preventDefault()\n                const API = new APIUser();\n                const usernameField: HTMLInputElement | null = document.querySelector('#username__login')\n                const passwordField: HTMLInputElement | null = document.querySelector('#password__login')\n                if (usernameField && passwordField && (usernameField.value && passwordField.value)){\n                    API.loginUser(\n                        usernameField.value,\n                        passwordField.value\n                    )\n                        .then(()=>{\n                            window.location.reload()\n                        })\n                    eventHandlers.form.cancelButton.onClick(FormRefs.LoginFormRef)\n\n                    \n                } else {\n                    alert(\"No data input fields were found:(\")\n                    return\n                }\n\n                usernameField.value = \"\"\n                passwordField.value = \"\"\n\n            }\n        },\n        photoForm: {\n            onSubmit: (event: any) => {\n                console.log(event, this)\n                event.preventDefault()\n                if (typeof event.target === \"object\" && event.target !== null) {\n                    const label = event.target[0].value\n                    const url = event.target[1].value\n                    const imagesClient = new APIImages()\n\n                    imagesClient.postImage({label:label, img_url: url}, console.log.bind(this, \"postImage\"))\n                        .then(()=>{\n                            window.location.reload()\n                        })\n\n                    event.target[0].value = \"\"\n                    event.target[1].value = \"\"\n                } else {\n                    alert(\"Something went wrong\")\n                }\n            }\n        },\n        passwordForm: {\n            onSubmit: (event: any)=>{\n                event.preventDefault()\n                const password = event.target[0].value\n                const username = event.target[1].value\n                const pk = event.target[2].value\n\n                const imagesClient = new APIImages()\n\n                imagesClient.deleteImage(pk, username, password, console.log.bind(this, 'deleteImage')).done(\n                    ()=> {\n                        window.location.reload()\n                    }\n                )\n            }\n        }\n    },\n    images: {\n        photoDeleteButton: {\n            onClick: (reference: RefObject<HTMLDivElement>, img:ReactNode) => {\n                if (typeof img === \"object\" && img !== null && \"props\" in img) {\n                    // eslint-disable-next-line\n\n                    const pkInput:any = document.getElementById('input__pk__hidden')\n                    if (pkInput && \"value\" in pkInput){\n                        pkInput.value = img.props[\"data-pk\"]\n                        eventHandlers.form.openButton.onClick(reference)\n                    }\n                }\n\n            }\n        },\n        inputUrl: {\n            onChange: (e:any)=>{\n                const input = e.target\n                if (typeof input === \"object\" && input!== null && \"value\" in input) {\n                    // Здесь мог быть нормальный валидатор но мне лень честно говоря\n                    // console.log(\"changed\")\n                }\n            }\n        },\n        inputSearch: {\n            onChange: (e:any, setFilter: Dispatch<SetStateAction<Function>>) => {\n                const filter = (images: Array<ReactNode>)=>{\n                    const searchQueryRegExp = RegExp(e.target.value.toLowerCase())\n                    if (images === undefined){\n                        return []\n                    }\n                    // @ts-ignore\n                    return images.filter((value => value?.props?.alt.toLowerCase().match(searchQueryRegExp) !== null))\n                }\n\n                setFilter(()=>filter)\n            }\n        }\n\n    }\n}","import React, {Dispatch, SetStateAction} from \"react\";\nimport search_img from \"../img/svg/search_black_24dp.svg\";\nimport '../css/header.css'\nimport {eventHandlers} from \"../utils/events/handlers\";\nimport {FormRefs} from \"../utils/references/formRefs\";\n\nexport const Header: React.FC<{\n    isWindow: {\n        [key: string]: boolean\n    },\n    username:string,\n    setFilterImages: Dispatch<SetStateAction<Function>>\n}> = (props) => (\n\n        <div className=\"header\">\n        <div className=\"wrapper__header\">\n            <div className=\"logo__header\" onClick={()=>window.location.href=\"/\"}>\n                <div className=\"img__logo\">\n                    <div className=\"top__logo\"/>\n                    <div className=\"bottom__logo\"/>\n                </div>\n                <div className=\"text__logo\">\n                    <div className=\"top_text__logo\">My Unsplash</div>\n                    <div className=\"bottom_text__logo\">devchallenges.io</div>\n                </div>\n            </div>\n            <div className=\"search__header\" onClick={(event)=>{\n                console.log(event)\n                // @ts-ignore\n                if (event.target.className === \"search__header\"){\n                    console.log(event.target)\n                    // @ts-ignore\n                    event.target.children[1].focus()\n                }\n            }}>\n                <img src={search_img} alt=\"search\" className=\"img__search\" />\n                <input type=\"text\" className=\"input__search\" placeholder=\"Search by name\" onChange={\n                    (event) =>\n                        eventHandlers.images.inputSearch.onChange(event, props.setFilterImages)\n                }/>\n            </div>\n\n            <div className=\"login__header\" onClick={eventHandlers.form.openButton.onClick.bind(this, FormRefs.LoginFormRef)}\n                style={props.username?{\n                    justifyContent: \"start\"\n                }: undefined}\n            >{props.username || \"Login\"}</div>\n\n            <div className=\"add__header\" onClick={eventHandlers.form.openButton.onClick.bind(this, FormRefs.PhotoFormRef)}>{\n                    \"Add a photo\"\n            }</div>\n        </div>\n    </div>\n)","export enum ColumnCount{\n    One = 1,\n    Two,\n    Three\n}","import React from \"react\";\nimport {IImagesProps} from \"../utils/props/imagesProps\";\nimport {eventHandlers} from \"../utils/events/handlers\";\nimport {FormRefs} from \"../utils/references/formRefs\";\n\nexport default class WrapperImg extends React.Component<IImagesProps> {\n    render() {\n        const img: {props?:{\n                alt?: string\n            }} = this.props.children || {};\n\n        return (\n            <figure>\n                <div className=\"pre_img\">\n                    <div className=\"text__pre\">{img.props?.alt}</div>\n                    <div className=\"delete__pre\" onClick={eventHandlers.images.photoDeleteButton.onClick.bind(this, FormRefs.PasswordFormRef, this.props.children)}>delete</div>\n                </div>\n                {this.props.children}\n            </figure>\n        )\n    }\n}\n","import React, {ReactNode, ReactNodeArray} from \"react\";\nimport {ColumnsOrderEnum} from \"../utils/enums/columnsOrderEnum\";\nimport {IColumnProps} from \"../utils/props/columnProps\";\nimport WrapperImg from \"./wrapperImage\";\n\n\nexport class Column extends React.Component<IColumnProps>{\n    getContentColumn = (index: ColumnsOrderEnum): ReactNodeArray => {\n        const order: Array<ReactNodeArray> = this.props.order\n        const contentColList = (): Array<ReactNode> => {\n            const imgListColumn: Array<ReactNode> = []\n            order.forEach((imgList => {\n                if (index+1 <= imgList.length){\n                    imgListColumn.push(imgList[index])\n                }\n            }))\n            return imgListColumn\n        }\n        const wrapContentCol = (): ReactNodeArray =>{\n            return contentColList().map((img, index) => {\n                return (<WrapperImg key={index}>{img}</WrapperImg>)\n            })\n        }\n        return wrapContentCol()\n    }\n\n    render() {\n        return (\n            <div className=\"col\" style={{\n                justifyContent: (this.props.column === 2 && this.props.columnCount === 2)?'start': 'end'\n            }}>\n                {this.getContentColumn(this.props.column)}\n            </div>\n        );\n    }\n}","import React, {CSSProperties, PropsWithChildren, ReactNode, ReactNodeArray} from \"react\";\nimport '../css/images.css'\nimport {IImagesProps} from \"../utils/props/imagesProps\";\nimport {ColumnsOrderEnum} from \"../utils/enums/columnsOrderEnum\";\nimport {Column} from \"./column\";\nimport {ColumnCount} from \"../utils/enums/columnCountEnum\";\n\n\nexport class Images extends React.Component<IImagesProps> {\n\n    getStyles = (): CSSProperties => {\n        return {\n            gridTemplateColumns: `repeat(${this.props.columnCount}, minmax(0,1fr))`,\n            justifyItems: (this.props.columnCount === 1)?'center':'end',\n            maxWidth: (this.props.columnCount === 2)? '850px': 'inherit',\n            marginLeft:'auto',\n            marginRight:'auto'\n        }\n    }\n\n    isEmpty = (): boolean => {\n        document.querySelectorAll('.col').forEach(colElem => {\n            if (colElem.childElementCount > 0)\n                return false\n        })\n        return true\n    }\n\n    getOrder = (): Array<ReactNodeArray> => {\n        // if (this.props.filterImages)\n        //     console.log(\"GET ORDER\", this.props.filterImages(this.props.children))\n        let filteredImages: any = this.props.children;\n        if (this.props.filterImages)\n            filteredImages = this.props.filterImages(this.props.children) || [];\n\n        if (Array.isArray(filteredImages)){\n            const imageArray: Array<ReactNodeArray> = []\n            filteredImages.forEach((current, index)=>{\n                const row_index: number = Math.trunc(index / (this.props.columnCount || ColumnCount.Three))\n                if (!imageArray[row_index]){\n                    imageArray.push([])\n                }\n                imageArray[row_index].push(current)\n            })\n            return imageArray\n        } else {\n            const image: ReactNode = filteredImages\n            return [[image, ], ]\n        }\n\n    }\n\n    getColumns = (): Array<ReactNode> => {\n        const order = this.getOrder()\n        const columnArray: Array<ReactNode> = [];\n        for (let column = ColumnsOrderEnum.First; column < (this.props.columnCount || 3); column++){\n            columnArray.push(\n                (\n                    <Column key={column} column={column} order={order}>\n                        {this.props.children}\n                    </Column>\n                )\n            )\n        }\n\n        return columnArray\n    }\n\n    render() {\n        if (!this.props.children)\n            return (\n                <div className=\"images\">\n                    No^)\n                </div>\n            )\n\n\n        return (\n            <div className=\"images\" style={this.getStyles()}>\n                {this.getColumns()}\n            </div>\n        );\n    }\n}","import React, {CSSProperties} from \"react\";\nimport {IFormProps} from \"../../../utils/props/formProps\";\n\nexport default class Form extends React.Component<IFormProps, {style: CSSProperties}>{\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            style: {\n                display: this.props.style?.display || 'none'\n            }\n        }\n    }\n\n    render() {\n\n        return (\n            <div ref={this.props.reference} className=\"window__wrapper\" style={this.state.style}>\n                <form method={this.props.method} onSubmit={this.props.onSubmit}>\n                {this.props.children}\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Form from \"./base/form\";\nimport {IFormInheritProps} from \"../../utils/props/formInheritProps\";\nimport {eventHandlers} from \"../../utils/events/handlers\";\nimport {FormRefs} from \"../../utils/references/formRefs\";\n\nexport default class PhotoForm extends React.Component<IFormInheritProps, any>{\n\n    render() {\n        return (\n            <Form method={'POST'} actionUrl={'/'} onSubmit={\n                (event => {\n                    eventHandlers.form.photoForm.onSubmit(event)\n                })\n\n            } reference={FormRefs.PhotoFormRef}>\n                <div className=\"card add_photo_card\">\n                    <div className=\"title__card\">Add a new photo</div>\n                    <div className=\"label__card\">\n                        <div className=\"text__label\">Label</div>\n                        <input type=\"text\" className=\"input__label\" name=\"label\" placeholder=\"Suspendisse elit massa\" required/>\n                    </div>\n                    <div className=\"url__card\">\n                        <div className=\"text__url\">Photo URL</div>\n                        <input type=\"url\" className=\"input__url\" name=\"url\"\n                               placeholder=\"https://images.unsplash.com/photo-1584395630827-860eee694d7b?ixlib=r...\"\n                               onChange={eventHandlers.images.inputUrl.onChange}\n                               required/>\n                    </div>\n                    <input type=\"submit\" className=\"submit__card\" value=\"Submit\" />\n                        <div className=\"cancel__card\" onClick={eventHandlers.form.cancelButton.onClick.bind(this,FormRefs.PhotoFormRef)}>Cancel</div>\n                </div>\n            </Form>\n        );\n    }\n}","import React from \"react\";\nimport Form from \"./base/form\";\nimport {IFormInheritProps} from \"../../utils/props/formInheritProps\";\nimport {eventHandlers} from \"../../utils/events/handlers\";\nimport {FormRefs} from \"../../utils/references/formRefs\";\n\n\nexport default class PasswordForm extends React.Component<IFormInheritProps, any>{\n    render() {\n        return (\n            <Form method={'DELETE'} actionUrl={'/'} onSubmit={eventHandlers.form.passwordForm.onSubmit} reference={FormRefs.PasswordFormRef}>\n                <div className=\"card enter_password_card\">\n                    <div className=\"title__card\">Are you sure?</div>\n\n                    <div className=\"password__card\">\n                        <div className=\"text__password\">Password</div>\n                        <input type=\"password\" className=\"input__password\" autoComplete={'no'} placeholder=\"******************\" required/>\n                    </div>\n\n                    <input type=\"text\" id={\"input__username__hidden\"} name={\"username\"} defaultValue={this.props.username} hidden/>\n                    <input type=\"text\" id={\"input__pk__hidden\"} name={\"pk\"} hidden/>\n                    <input type=\"submit\" className=\"delete__card\" value=\"Delete\" />\n                        <div className=\"cancel__card_1\" onClick={eventHandlers.form.cancelButton.onClick.bind(this,FormRefs.PasswordFormRef)}>Cancel</div>\n                </div>\n            </Form>\n        );\n    }\n}","import React from \"react\";\nimport Form from \"./base/form\";\nimport {IFormInheritProps} from \"../../utils/props/formInheritProps\";\nimport {eventHandlers} from \"../../utils/events/handlers\";\nimport {FormRefs} from \"../../utils/references/formRefs\";\n\nexport default class LoginForm extends React.Component<IFormInheritProps, any>{\n\n    render() {\n        return (\n            <Form method={'POST'} actionUrl={'/'} onSubmit={eventHandlers.form.loginForm.onSubmit} reference={FormRefs.LoginFormRef}>\n                <div className=\"card login_card\">\n                    <div className=\"title__card\">Login or Register</div>\n                    <div className=\"username__card\">\n                        <div className=\"text__label\">Username</div>\n                        <input type=\"text\" id=\"username__login\" className=\"input__label\" name=\"username\" placeholder=\"John\" required/>\n                    </div>\n                    <div className=\"password__card\">\n                        <div className=\"text__password\">Password</div>\n                        <input type=\"password\" id=\"password__login\" className=\"input__password\" name=\"password\" autoComplete={'no'} placeholder=\"******************\" required/>\n                    </div>\n                    <input type=\"submit\" className=\"submit__card\" value=\"Login\"/>\n                    <div className=\"cancel__card\" onClick={eventHandlers.form.cancelButton.onClick.bind(this,FormRefs.LoginFormRef)}>Cancel</div>\n                </div>\n            </Form>\n        );\n    }\n}","import React, {ReactNodeArray} from \"react\";\nimport APIImages from '../api/imageAPI'\nimport {ImageResponseBody} from \"../utils/interfaces\";\nimport APIUser from \"../api/authAPI\";\nimport {parseImageListResponse} from \"../utils/parsers\";\n\n\nexport default class UserImages extends React.Component<\n    {\n        client: APIUser,\n        saveImage: Function\n    },\n    {\n        response: {},\n        handleStates: Function,\n        images: ReactNodeArray\n    }>{\n    private client: APIUser;\n    private imagesClient: APIImages;\n    constructor(props: any) {\n        super(props);\n\n        this.client = this.props.client\n        this.state = {\n            response: {},\n            handleStates: this.handleStates,\n            images: ([<>Error</>, ])\n        }\n\n        this.imagesClient = new APIImages()\n\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount. user: ', this.client.user)\n        this.imagesClient.getImages(this.handleStates)\n    }\n\n    componentDidUpdate(prevProps: Readonly<{ client: APIUser }>, prevState: Readonly<any>, snapshot?: any) {\n        if (this.client.user === \"\") return\n        if (prevState.response !== this.state.response){\n            this.parseImages()\n        }\n    }\n\n    private handleStates = (response: Array<ImageResponseBody> | ImageResponseBody)=>{\n        this.setState({response})\n    }\n\n    public parseImages = (): void=> {\n        const response = this.state.response\n        const images = parseImageListResponse(response)\n        this.setState({images})\n        this.props.saveImage(images)\n    };\n\n    render() {\n        return false\n    }\n}","import React, {ReactNode} from \"react\";\n\nconst parseImageListResponse = (response: any) => {\n    let images: Array<ReactNode> = []\n    if (Array.isArray(response)){\n        console.log(response)\n        // means is ok\n        response.forEach((image,index) => {\n            images.push((<img key={index.toString()} src={image.img_file} alt={image.label} data-pk={image.pk}/>))\n        })\n    } else{\n        console.log(\"Something went wrong: \" + response)\n        images = [<>Error</>, ]\n    }\n    return images\n}\n\nexport {\n    parseImageListResponse\n}","import React from \"react\";\nimport {eventHandlers} from \"../utils/events/handlers\";\nimport {FormRefs} from \"../utils/references/formRefs\";\nexport const WhiteSpaceArea: React.FC<{\n    isAnonymous:boolean\n}> = (props) =>{\n    return (\n        <div className={\"whitespace\"}>\n            {props.isAnonymous?\n                \"Login to see and add images\"\n                :\n                [\n                <div key={\"addphoto_whitespace\"} className={\"addphoto__whitespace\"} onClick={eventHandlers.form.openButton.onClick.bind(this, FormRefs.PhotoFormRef)}>Add photo</div>,\n                    <span key={\"addphoto_span\"} className={\"addphoto_span\"}>to see images</span>\n                ]\n            }\n        </div>\n    )\n}","import React, {Dispatch, SetStateAction, useState} from 'react';\nimport './css/style.css'\nimport './css/add_photo.css'\nimport './css/enter_password.css'\nimport './css/login.css'\nimport './css/whitespace.css'\nimport {Header} from \"./components/header\";\nimport {Images} from \"./components/images\";\nimport {ColumnCount} from \"./utils/enums/columnCountEnum\";\nimport PhotoForm from \"./components/forms/photoForm\";\nimport PasswordForm from \"./components/forms/passwordForm\";\nimport LoginForm from \"./components/forms/loginForm\";\nimport {useMediaPredicate} from \"react-media-hook\";\nimport UserImages from \"./components/userImages\";\nimport APIUser from \"./api/authAPI\";\nimport {WhiteSpaceArea} from \"./components/whiteSpaceArea\";\n\nconst UserAPI = new APIUser()\n\nfunction GetMediaPredicates(): {[key:string]: boolean} {\n    return {\n        smallerThan700: useMediaPredicate(\"(max-width: 700px)\"),\n        smallerThan850: useMediaPredicate(\"(max-width: 850px)\"),\n        smallerThan1304: useMediaPredicate(\"(max-width: 1304px)\"),\n    }\n}\n\nfunction App(){\n    // states\n    const [images, setImages] = useState([null,null])\n    const [filter, setFilter]: [Function | undefined, Dispatch<SetStateAction<Function>>] = useState<Function | undefined>(undefined)\n    // --------------\n\n    // fields\n    const username = UserAPI.user;\n    const isWindow: {\n        [key: string]: boolean\n    } = GetMediaPredicates()\n    let columnsCount = ColumnCount.Three\n    // --------------\n\n    // functions\n    const saveImages = (_images: []) => setImages(_images)\n    // --------------\n\n\n    if (isWindow.smallerThan850){\n        columnsCount = ColumnCount.One\n    } else if (isWindow.smallerThan1304){\n        columnsCount = ColumnCount.Two\n    }\n\n    return (\n      <>\n      <PhotoForm />\n      <PasswordForm username={username}/>\n      <LoginForm />\n      <div className=\"wrapper\">\n          <Header isWindow={isWindow} username={username} setFilterImages={setFilter}/>\n          {images.length > 0?\n              <Images columnCount={columnsCount} filterImages={filter}>\n                  {images}\n              </Images>\n              :\n              <WhiteSpaceArea isAnonymous={username === \"\"}/>\n          }\n\n\n              <footer>\n                  <hr className={\"hr__footer\"} />\n                  <div className={\"div__footer\"}>\n                  created by <a href=\"https://github.com/serje3\" className=\"username__footer\">serje3</a> -\n                  devChallenges.io\n                  </div>\n              </footer>\n\n      </div>\n          {/* render returns false */}\n          <UserImages client={UserAPI} saveImage={saveImages}/>\n\n      </>\n  );\n}\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/reset.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}